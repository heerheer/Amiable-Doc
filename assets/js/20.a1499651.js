(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{389:function(t,a,s){"use strict";s.r(a);var e=s(45),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"监听事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#监听事件"}},[t._v("#")]),t._v(" 监听事件")]),t._v(" "),s("h2",{attrs:{id:"amiable事件机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#amiable事件机制"}},[t._v("#")]),t._v(" Amiable事件机制")]),t._v(" "),s("p",[t._v("Amiable会在初始化时将所有事件实例化成"),s("code",[t._v("IPluginEvent")]),t._v("对象")]),t._v(" "),s("p",[t._v("加入到"),s("code",[t._v("AmiableService")]),t._v("中的Event列表")]),t._v(" "),s("p",[t._v("当事件从入口函数(Export)中触发，Amiable会唤起所有对应"),s("code",[t._v("AmiableEventType")]),t._v("的"),s("code",[t._v("IPluginEvent")]),t._v("对象。")]),t._v(" "),s("h2",{attrs:{id:"添加继承类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加继承类"}},[t._v("#")]),t._v(" 添加继承类")]),t._v(" "),s("p",[t._v("我们可以在任何被引用的类库(程序集)中添加一个继承")]),t._v(" "),s("p",[s("code",[t._v("IPluginEvent")]),t._v("的类")]),t._v(" "),s("p",[t._v("实现其中的"),s("code",[t._v("EventType")]),t._v("属性与"),s("code",[t._v("Process")]),t._v("方法")]),t._v(" "),s("h2",{attrs:{id:"在amiableservice中注册"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在amiableservice中注册"}},[t._v("#")]),t._v(" 在AmiableService中注册")]),t._v(" "),s("p",[t._v("这一步会在初始化时进行。\n请在这里注册所有的事件。")]),t._v(" "),s("div",{staticClass:"language-csharp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// <summary>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// 在这里注册事件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// </summary>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RegEvents")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddPluginEvent")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AmiableTest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddPluginEvent")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("UITest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuEvent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//AddPluginEvent<IPluginEvent类型>();")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"使用amiableeventargs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用amiableeventargs"}},[t._v("#")]),t._v(" 使用AmiableEventArgs")]),t._v(" "),s("p",[t._v("AmiableEventArgs是一个基类，所有的事件参数都是其子类。")]),t._v(" "),s("p",[t._v("如果确定了事件类型，可以在Process中 强制转换 类型为 事件提供的参数类型。")])])}),[],!1,null,null,null);a.default=n.exports}}]);